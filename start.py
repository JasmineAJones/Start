# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'c:\Users\JasmineJones\Documents\Start\start.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QTimer
import time
from PyQt5.QtWidgets import QApplication, QMainWindow, QAbstractScrollArea, QWidget
from random import uniform
from datetime import  datetime



##########################################Start#######################################################
class Ui_Start(object):

    def clicked_btn(self,x):
        match x:
            case 1: #Guess
                QApplication.closeAllWindows()
                self.GuessWindow = QMainWindow()
                self.ui = Ui_GuessWindow()
                self.ui.setupUi(self.GuessWindow)
                self.GuessWindow.show()
            case 2: #Tic
                QApplication.closeAllWindows()
                self.TicWindow = QMainWindow()
                self.ui = Ui_TicWindow()
                self.ui.setupUi(self.TicWindow)
                self.TicWindow.show()
            case 3:
                QApplication.closeAllWindows()
                self.MathWindow = QMainWindow()
                self.ui = Ui_MathWindow()
                self.ui.setupUi(self.MathWindow)
                self.MathWindow.show() 
            case 4:
                QApplication.closeAllWindows()
                self.CSWindow = QMainWindow()
                self.ui = Ui_CSWindow()
                self.ui.setupUi(self.CSWindow)
                self.CSWindow.show() 
            case 5:
                QApplication.closeAllWindows()
                self.CSWindow = QMainWindow()
                self.ui = Ui_CSWindow()
                self.ui.setupUi(self.CSWindow)
                self.CSWindow.show()  
            case 6:
                QApplication.closeAllWindows()
                self.CSWindow = QMainWindow()
                self.ui = Ui_CSWindow()
                self.ui.setupUi(self.CSWindow)
                self.CSWindow.show() 

    def setupUi(self, StartWindow):
        StartWindow.setObjectName("StartWindow")
        StartWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(StartWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")


        self.title = QtWidgets.QLabel(self.centralwidget)
        self.title.setMaximumSize(QtCore.QSize(200, 150))
        font = QtGui.QFont()
        font.setFamily("MS Gothic")
        font.setPointSize(20)
        self.title.setFont(font)
        self.title.setAlignment(QtCore.Qt.AlignCenter)
        self.title.setObjectName("title")
        self.gridLayout_2.addWidget(self.title, 1, 1, 1, 1)


        self.greeting = QtWidgets.QLabel(self.centralwidget)
        self.greeting.setMaximumSize(QtCore.QSize(200, 75))
        font = QtGui.QFont()
        font.setFamily("MS Gothic")
        font.setPointSize(14)
        self.greeting.setFont(font)
        self.greeting.setObjectName("greeting")
        self.gridLayout_2.addWidget(self.greeting, 0, 0, 1, 1)


        self.PickaGame = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("MS Gothic")
        font.setPointSize(9)
        self.PickaGame.setFont(font)
        self.PickaGame.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.PickaGame.setAlignment(QtCore.Qt.AlignCenter)
        self.PickaGame.setObjectName("PickaGame")
        self.gridLayout_2.addWidget(self.PickaGame, 2, 1, 1, 1)


        self.guessing = QtWidgets.QPushButton(self.centralwidget)
        self.guessing.setMinimumSize(QtCore.QSize(200, 100))
        self.guessing.setMaximumSize(QtCore.QSize(200, 100))
        font = QtGui.QFont()
        font.setFamily("MS Gothic")
        font.setPointSize(11)
        self.guessing.setFont(font)
        self.guessing.setObjectName("guessing")
        self.gridLayout_2.addWidget(self.guessing, 5, 0, 1, 1)
        self.guessing.clicked.connect(lambda: self.clicked_btn(1))


        self.tictactoe = QtWidgets.QPushButton(self.centralwidget)
        self.tictactoe.setMinimumSize(QtCore.QSize(200, 100))
        self.tictactoe.setMaximumSize(QtCore.QSize(200, 100))
        font = QtGui.QFont()
        font.setFamily("MS Gothic")
        font.setPointSize(11)
        self.tictactoe.setFont(font)
        self.tictactoe.setObjectName("tictactoe")
        self.gridLayout_2.addWidget(self.tictactoe, 5, 1, 1, 1)
        self.tictactoe.clicked.connect(lambda: self.clicked_btn(2))


        self.cs1 = QtWidgets.QPushButton(self.centralwidget)
        self.cs1.setMinimumSize(QtCore.QSize(200, 100))
        self.cs1.setMaximumSize(QtCore.QSize(200, 100))
        font = QtGui.QFont()
        font.setFamily("MS Gothic")
        font.setPointSize(11)
        self.cs1.setFont(font)
        self.cs1.setObjectName("cs1")
        self.gridLayout_2.addWidget(self.cs1, 5, 2, 1, 1)
        self.cs1.clicked.connect(lambda: self.clicked_btn(3))


        self.cs2 = QtWidgets.QPushButton(self.centralwidget)
        self.cs2.setMinimumSize(QtCore.QSize(200, 100))
        self.cs2.setMaximumSize(QtCore.QSize(200, 100))
        font = QtGui.QFont()
        font.setFamily("MS Gothic")
        font.setPointSize(11)
        self.cs2.setFont(font)
        self.cs2.setObjectName("cs2")
        self.gridLayout_2.addWidget(self.cs2, 6, 0, 1, 1)
        self.cs2.clicked.connect(lambda: self.clicked_btn(4))


        self.cs3 = QtWidgets.QPushButton(self.centralwidget)
        self.cs3.setMinimumSize(QtCore.QSize(200, 100))
        self.cs3.setMaximumSize(QtCore.QSize(200, 100))
        font = QtGui.QFont()
        font.setFamily("MS Gothic")
        font.setPointSize(11)
        self.cs3.setFont(font)
        self.cs3.setObjectName("cs3")
        self.gridLayout_2.addWidget(self.cs3, 6, 1, 1, 1)
        self.cs3.clicked.connect(lambda: self.clicked_btn(5))


        self.cs4 = QtWidgets.QPushButton(self.centralwidget)
        self.cs4.setMinimumSize(QtCore.QSize(200, 100))
        self.cs4.setMaximumSize(QtCore.QSize(200, 100))
        font = QtGui.QFont()
        font.setFamily("MS Gothic")
        font.setPointSize(11)
        self.cs4.setFont(font)
        self.cs4.setObjectName("cs4")
        self.gridLayout_2.addWidget(self.cs4, 6, 2, 1, 1)
        self.cs4.clicked.connect(lambda: self.clicked_btn(6))


        StartWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(StartWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        StartWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(StartWindow)
        self.statusbar.setObjectName("statusbar")
        StartWindow.setStatusBar(self.statusbar)

        self.retranslateUi(StartWindow)
        QtCore.QMetaObject.connectSlotsByName(StartWindow)

    def retranslateUi(self, StartWindow):
        _translate = QtCore.QCoreApplication.translate
        StartWindow.setWindowTitle(_translate("StartWindow", "StartWindow"))

        if datetime.now().hour <= 7:
            self.greeting.setText(_translate("StartWindow", "Wow it's early!"))
        elif datetime.now().hour <= 12:
            self.greeting.setText(_translate("StartWindow", "Good Morning!"))
        elif datetime.now().hour <=17:
            self.greeting.setText(_translate("StartWindow", "Good Afternoon!"))
        else:
            self.greeting.setText(_translate("StartWindow", "Shouldn't you be home?!"))
    
        self.title.setText(_translate("StartWindow", "Mini Games"))
        
        self.PickaGame.setText(_translate("StartWindow", "Pick a game"))

        self.guessing.setText(_translate("StartWindow", "Guessing Game"))
        
        self.tictactoe.setText(_translate("StartWindow", "TicTacToe"))

        self.cs1.setText(_translate("StartWindow", "Math Good"))

        self.cs2.setText(_translate("StartWindow", "Coming Soon..."))

        self.cs3.setText(_translate("StartWindow", "Coming Soon..."))

        self.cs4.setText(_translate("StartWindow", "Coming Soon..."))
######################################################################################################
        
##########################################Guess#######################################################
def rand(gues):
    x = int(uniform(1,4))
    if gues == x:
        return True
    return False

def lost(m, percent):
    money = m*100
    t = round(((money - (percent * money))/100),2)
    return t

def won(m, percent):
    money = m*100
    t = round(((money + (percent * money))/100),2)
    return t

def toIntp(p):
    speChars = "%"
    pp = p.replace(speChars, '')
    p = float(pp)/100
    return p

def toIntm(p):
    speChars = "$"
    pp = p.replace(speChars, '')
    p = float(pp)
    return p

def checkmon(m):
    if m <= 0.01:
        return True
    elif m >= 400:
        return 'won'
#### Guess Window ####
class Ui_GuessWindow(object):
    
    def clicked_btn(self,n):
        self.winLose.clear()
        m = toIntm(self.money.toPlainText())
        p = toIntp(self.percentBox.currentText())

        if rand(n) == True:
            time.sleep(1)
            self.winLose.setText("You Won!!")
            self.money.setText("$"+str(won(m,p)))
            
        else:
            time.sleep(1)
            self.winLose.setText("You Lost :(") 
            self.money.setText("$"+str(lost(m,p)))

            m = toIntm(self.money.toPlainText())
            if checkmon(m) == True:
                self.openLoseWindow()
            elif checkmon(m) == 'won':
                self.openWinWindow()  
        self.count = self.count+1

    def openLoseWindow(self): ### Opening lose window
                                                 
        self.ui = Ui_LoseForm()
        self.LostWindow = QWidget()
        self.ui.setupUi(self.LostWindow,self.count)
        self.LostWindow.show()

    def openWinWindow(self): ### Opening win window
                                                 
        self.ui = Ui_WinForm()
        self.WinWindow = QWidget()
        self.ui.setupUi(self.WinWindow,self.money.toPlainText())
        self.WinWindow.show()

    def setupUi(self, GuessWindow):
        self.count = 1
        
        GuessWindow.setObjectName("GuessWindow")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        GuessWindow.setSizePolicy(sizePolicy)
        self.centralwidget = QtWidgets.QWidget(GuessWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")

        self.moneyLabel = QtWidgets.QLabel(self.centralwidget)
        self.moneyLabel.setObjectName("moneyLabel")
        self.gridLayout.addWidget(self.moneyLabel, 2, 1, 1, 1)

        self.percentLabel = QtWidgets.QLabel(self.centralwidget)
        self.percentLabel.setObjectName("percentLabel")
        self.gridLayout.addWidget(self.percentLabel, 4, 1, 1, 2)

        self.winLose = QtWidgets.QTextBrowser(self.centralwidget)
        self.winLose.setMaximumSize(QtCore.QSize(700, 20))
        self.winLose.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.winLose.setFrameShadow(QtWidgets.QFrame.Plain)
        self.winLose.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.winLose.setSizeAdjustPolicy(QAbstractScrollArea.AdjustToContents)
        self.winLose.setObjectName("winLose")
        self.gridLayout.addWidget(self.winLose, 10, 1, 1, 4)


        self.one = QtWidgets.QPushButton(self.centralwidget)
        self.one.setObjectName("one")
        self.gridLayout.addWidget(self.one, 8, 2, 1, 1)
        self.one.clicked.connect(lambda: self.clicked_btn(1))

        self.two = QtWidgets.QPushButton(self.centralwidget)
        self.two.setObjectName("two")
        self.gridLayout.addWidget(self.two, 8, 3, 1, 1)
        self.two.clicked.connect(lambda: self.clicked_btn(2))

        self.three = QtWidgets.QPushButton(self.centralwidget)
        self.three.setObjectName("three")
        self.gridLayout.addWidget(self.three, 8, 4, 1, 1)
        self.three.clicked.connect(lambda: self.clicked_btn(3))

        self.prompt = QtWidgets.QLabel(self.centralwidget)
        self.prompt.setObjectName("prompt")
        self.gridLayout.addWidget(self.prompt, 6, 1, 1, 1)
        
        self.percentBox = QtWidgets.QComboBox(self.centralwidget)
        self.percentBox.setMaximumSize(QtCore.QSize(120, 20))
        self.percentBox.setObjectName("percentBox")
        self.percentBox.addItem("")
        self.percentBox.addItem("")
        self.percentBox.addItem("")
        self.percentBox.addItem("")
        self.percentBox.addItem("")
        self.percentBox.addItem("")
        self.percentBox.addItem("")
        self.gridLayout.addWidget(self.percentBox, 4, 3, 1, 1)
        
        self.money = QtWidgets.QTextBrowser(self.centralwidget)
        self.money.setMaximumSize(QtCore.QSize(120, 25))
        self.money.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.money.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.money.setObjectName("money")
        self.gridLayout.addWidget(self.money, 2, 3, 1, 1)
        
        self.Title = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("High Tower Text")
        font.setPointSize(14)
        self.Title.setFont(font)
        self.Title.setObjectName("Title")
        self.gridLayout.addWidget(self.Title, 0, 1, 1, 2)
        GuessWindow.setCentralWidget(self.centralwidget)
        
        self.menubar = QtWidgets.QMenuBar(GuessWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 332, 22))
        self.menubar.setObjectName("menubar")
        GuessWindow.setMenuBar(self.menubar)
        
        self.statusbar = QtWidgets.QStatusBar(GuessWindow)
        self.statusbar.setObjectName("statusbar")
        GuessWindow.setStatusBar(self.statusbar)

        self.retranslateUi(GuessWindow)
        QtCore.QMetaObject.connectSlotsByName(GuessWindow)

    def retranslateUi(self, GuessWindow):
        _translate = QtCore.QCoreApplication.translate
        GuessWindow.setWindowTitle(_translate("GuessWindow", "GuessWindow"))
        self.moneyLabel.setText(_translate("GuessWindow", "Your Money:"))
        self.percentLabel.setText(_translate("GuessWindow", "Choose a percentage"))
        self.two.setText(_translate("GuessWindow", "2"))
        self.one.setText(_translate("GuessWindow", "1"))
        self.three.setText(_translate("GuessWindow", "3"))
        self.prompt.setText(_translate("GuessWindow", "Make a guess..."))
        self.percentBox.setItemText(0, _translate("GuessWindow", "5%"))
        self.percentBox.setItemText(1, _translate("GuessWindow", "15%"))
        self.percentBox.setItemText(2, _translate("GuessWindow", "25%"))
        self.percentBox.setItemText(3, _translate("GuessWindow", "50%"))
        self.percentBox.setItemText(4, _translate("GuessWindow", "75%"))
        self.percentBox.setItemText(5, _translate("GuessWindow", "85%"))
        self.percentBox.setItemText(6, _translate("GuessWindow", "100%"))
        self.money.setText(_translate("GuessWindow", "$200"))
        self.Title.setText(_translate("GuessWindow", "Guessing Game"))
#### Lose Window ####
class Ui_LoseForm(object):

    def clicked_yes(self):
        QApplication.closeAllWindows()
        self.GuessWindow = QMainWindow()
        self.ui = Ui_GuessWindow()
        self.ui.setupUi(self.GuessWindow)
        self.GuessWindow.show()

    def clicked_no(self):
        QApplication.closeAllWindows()
        self.StartWindow = QMainWindow()
        self.ui = Ui_Start()
        self.ui.setupUi(self.StartWindow)
        self.StartWindow.show()

    def setupUi(self, Form, count):
        Form.setObjectName("Form")
        Form.resize(267, 170)
        Form.setMinimumSize(QtCore.QSize(267, 170))
        Form.setMaximumSize(QtCore.QSize(267, 170))
        self.gridLayout = QtWidgets.QGridLayout(Form)
        self.gridLayout.setObjectName("gridLayout")
        self.Title = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setFamily("High Tower Text")
        font.setPointSize(14)
        self.Title.setFont(font)
        self.Title.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.Title.setAutoFillBackground(False)
        self.Title.setTextFormat(QtCore.Qt.AutoText)
        self.Title.setScaledContents(False)
        self.Title.setObjectName("Title")
        self.gridLayout.addWidget(self.Title, 1, 3, 1, 1)

        self.yes = QtWidgets.QPushButton(Form)
        self.yes.setObjectName("yes")
        self.gridLayout.addWidget(self.yes, 14, 3, 1, 1)
        self.yes.clicked.connect(self.clicked_yes)

        self.no = QtWidgets.QPushButton(Form)
        self.no.setObjectName("no")
        self.gridLayout.addWidget(self.no, 15, 3, 1, 1)
        self.no.clicked.connect(self.clicked_no)
        
        self.roundLabel = QtWidgets.QLabel(Form)
        self.roundLabel.setObjectName("roundLabel")
        self.gridLayout.addWidget(self.roundLabel, 3, 3, 1, 1)
        self.rounds = QtWidgets.QTextBrowser(Form)
        self.rounds.setEnabled(True)
        self.rounds.setMaximumSize(QtCore.QSize(50, 25))
        self.rounds.setObjectName("rounds")
        self.rounds.setText(str(count))
        self.gridLayout.addWidget(self.rounds, 4, 3, 1, 1)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.Title.setText(_translate("Form", "You Lose! Retry?"))
        self.yes.setText(_translate("Form", "Yes"))
        self.no.setText(_translate("Form", "No"))
        self.roundLabel.setText(_translate("Form", "Rounds:"))   
#### Win Window ####
class Ui_WinForm(object):

    def clicked_yes(self):
        QApplication.closeAllWindows()
        self.GuessWindow = QMainWindow()
        self.ui = Ui_GuessWindow()
        self.ui.setupUi(self.GuessWindow)
        self.GuessWindow.show()

    def clicked_no(self):
        sys.exit()

    def setupUi(self, Form, mon):
        Form.setObjectName("Form")
        Form.resize(267, 170)
        Form.setMinimumSize(QtCore.QSize(267, 170))
        Form.setMaximumSize(QtCore.QSize(267, 170))
        self.gridLayout = QtWidgets.QGridLayout(Form)
        self.gridLayout.setObjectName("gridLayout")
        self.Title = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setFamily("High Tower Text")
        font.setPointSize(14)
        self.Title.setFont(font)
        self.Title.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.Title.setAutoFillBackground(False)
        self.Title.setTextFormat(QtCore.Qt.AutoText)
        self.Title.setScaledContents(False)
        self.Title.setObjectName("Title")
        self.gridLayout.addWidget(self.Title, 1, 3, 1, 1)

        self.yes = QtWidgets.QPushButton(Form)
        self.yes.setObjectName("yes")
        self.gridLayout.addWidget(self.yes, 14, 3, 1, 1)
        self.yes.clicked.connect(self.clicked_yes)

        self.no = QtWidgets.QPushButton(Form)
        self.no.setObjectName("no")
        self.gridLayout.addWidget(self.no, 15, 3, 1, 1)
        self.no.clicked.connect(self.clicked_no)
        
        self.roundLabel = QtWidgets.QLabel(Form)
        self.roundLabel.setObjectName("roundLabel")
        self.gridLayout.addWidget(self.roundLabel, 3, 3, 1, 1)
        self.rounds = QtWidgets.QTextBrowser(Form)
        self.rounds.setEnabled(True)
        self.rounds.setMaximumSize(QtCore.QSize(50, 25))
        self.rounds.setObjectName("rounds")
        self.rounds.setText(mon)
        self.gridLayout.addWidget(self.rounds, 4, 3, 1, 1)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.Title.setText(_translate("Form", "You Win! Try Again?"))
        self.yes.setText(_translate("Form", "Yes"))
        self.no.setText(_translate("Form", "No"))
        self.roundLabel.setText(_translate("Form", "Money:"))
#######################################################################################################

##########################################TicTac#######################################################
def wait():
    time.sleep(1)

class Ui_TicWindow(object):

    def bestSpot(self,count):
        match count:
            case 1:
                z = int(uniform(1,10))
                #While button is disabled, cycle through buttons until you find a button that is enabled#
                while self.btn[z].isEnabled() == False:
                    z = int(uniform(1,10))
                #Then Proceed with...
                self.btn[z].setText("O")
                self.btn[z].setEnabled(False)
            case _:
                all = 0
                for a in self.pair:
                    if self.btn[a[0]].text() == "X" and self.btn[a[1]].text() == "X":
                        if self.btn[a[2]].isEnabled() == False:
                            continue
                            
                        else:
                            self.btn[a[2]].setText("O")
                            self.btn[a[2]].setEnabled(False)
                            break
                    else:
                        all = all + 1
                
                if all == 23:
                    z = int(uniform(1,10))
                    while self.btn[z].isEnabled() == False:
                        z = int(uniform(1,10))
                    self.btn[z].setText("O")
                    self.btn[z].setEnabled(False)

    def check(self,xo):
        #Column#
        if self.pushButton_3.text() == xo and self.pushButton_2.text() == xo and self.pushButton.text() == xo:
            return True
        elif self.pushButton_8.text() == xo and self.pushButton_6.text() == xo and self.pushButton_4.text() == xo:
            return True   
        elif self.pushButton_9.text() == xo and self.pushButton_7.text() == xo and self.pushButton_5.text() == xo:
            return True 
        #Row#
        elif self.pushButton.text() == xo and self.pushButton_6.text() == xo and self.pushButton_7.text() == xo:
            return True
        elif self.pushButton_2.text() == xo and self.pushButton_4.text() == xo and self.pushButton_5.text() == xo:
            return True
        elif self.pushButton_3.text() == xo and self.pushButton_8.text() == xo and self.pushButton_9.text() == xo:
            return True
        #Diagonal#
        elif self.pushButton_9.text() == xo and self.pushButton_4.text() == xo and self.pushButton.text() == xo:
            return True
        elif self.pushButton_7.text() == xo and self.pushButton_4.text() == xo and self.pushButton_3.text() == xo:
            return True
        else:
            return False

    def opponent(self, count):
        xo = "X"
        if count == 9 and self.check("X") == False and self.check("O") == False:
            self.label.setText("Tie!")
            for i in self.btn:
                self.btn[i].setEnabled(False)
        elif self.check(xo) == True:
            self.label.setText("X's Won!")
            for i in self.btn:
                self.btn[i].setEnabled(False)

        elif self.check(xo) == False:
            self.bestSpot(self.count)
            self.count = self.count +1
            if self.check("O") == True:
                self.label.setText("O's Won!")
                for i in self.btn:
                    self.btn[i].setEnabled(False)           

    def x_btn(self,i):
        xo = "O"
        
        if self.check(xo) == False:
            self.btn[i].setText("X")
            self.btn[i].setEnabled(False)
            self.label.setText("....")
            self.count = self.count + 1
            self.opponent(self.count)
        else:
            self.label.setText("O's Won!")
            for i in self.btn:
                self.btn[i].setEnabled(False)

    def retry_btn(self):
        for i in self.btn:
            self.btn[i].setText("")
            self.btn[i].setEnabled(True)
    
        self.label.setText("X's Turn")
        self.count = 0

    def done_btn(self):
        QApplication.closeAllWindows()
        self.StartWindow = QMainWindow()
        self.ui = Ui_Start()
        self.ui.setupUi(self.StartWindow)
        self.StartWindow.show()

    def setupUi(self, TicWindow):
        self.count = 0
        
        TicWindow.setObjectName("TicWindow")
        TicWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(TicWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")

        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setMaximumSize(QtCore.QSize(200, 200))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.gridLayout_2.addWidget(self.pushButton, 1, 0, 1, 1)
        self.pushButton.clicked.connect(lambda: self.x_btn(1))

        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setMaximumSize(QtCore.QSize(200, 200))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.gridLayout_2.addWidget(self.pushButton_2, 2, 0, 1, 1)
        self.pushButton_2.clicked.connect(lambda: self.x_btn(2))

        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setMaximumSize(QtCore.QSize(200, 200))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setObjectName("pushButton_3")
        self.gridLayout_2.addWidget(self.pushButton_3, 3, 0, 1, 1)
        self.pushButton_3.clicked.connect(lambda: self.x_btn(3))
        
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setMaximumSize(QtCore.QSize(200, 200))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setObjectName("pushButton_4")
        self.gridLayout_2.addWidget(self.pushButton_4, 2, 1, 1, 1)
        self.pushButton_4.clicked.connect(lambda: self.x_btn(4))

        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setMaximumSize(QtCore.QSize(200, 200))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.pushButton_5.setFont(font)
        self.pushButton_5.setObjectName("pushButton_5")
        self.gridLayout_2.addWidget(self.pushButton_5, 2, 2, 1, 1)
        self.pushButton_5.clicked.connect(lambda: self.x_btn(5))

        self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_6.setMaximumSize(QtCore.QSize(200, 200))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.pushButton_6.setFont(font)
        self.pushButton_6.setObjectName("pushButton_6")
        self.gridLayout_2.addWidget(self.pushButton_6, 1, 1, 1, 1)
        self.pushButton_6.clicked.connect(lambda: self.x_btn(6))

        self.pushButton_7 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_7.setMaximumSize(QtCore.QSize(200, 200))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.pushButton_7.setFont(font)
        self.pushButton_7.setObjectName("pushButton_7")
        self.gridLayout_2.addWidget(self.pushButton_7, 1, 2, 1, 1)
        self.pushButton_7.clicked.connect(lambda: self.x_btn(7))

        self.pushButton_8 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_8.setMaximumSize(QtCore.QSize(200, 200))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.pushButton_8.setFont(font)
        self.pushButton_8.setObjectName("pushButton_8")
        self.gridLayout_2.addWidget(self.pushButton_8, 3, 1, 1, 1)
        self.pushButton_8.clicked.connect(lambda: self.x_btn(8))

        self.pushButton_9 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_9.setMaximumSize(QtCore.QSize(200, 200))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.pushButton_9.setFont(font)
        self.pushButton_9.setObjectName("pushButton_9")
        self.gridLayout_2.addWidget(self.pushButton_9, 3, 2, 1, 1)
        self.pushButton_9.clicked.connect(lambda: self.x_btn(9))

        #Retry Button#
        self.pushButton_10 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_10.setObjectName("pushButton_10")
        self.gridLayout_2.addWidget(self.pushButton_10, 4, 2, 1, 1)
        self.pushButton_10.clicked.connect(self.retry_btn)

        #Done Button#
        self.pushButton_11 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_11.setObjectName("pushButton_11")
        self.gridLayout_2.addWidget(self.pushButton_10, 4, 1, 1, 1)
        self.pushButton_11.clicked.connect(self.done_btn)


        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setMaximumSize(QtCore.QSize(200, 200))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.gridLayout_2.addWidget(self.label, 0, 1, 1, 1)

        TicWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(TicWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        TicWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(TicWindow)
        self.statusbar.setObjectName("statusbar")
        TicWindow.setStatusBar(self.statusbar)

        self.retranslateUi(TicWindow)
        QtCore.QMetaObject.connectSlotsByName(TicWindow)

        self.btn = {
            1: self.pushButton, 2:self.pushButton_2, 3:self.pushButton_3, 
            4: self.pushButton_4, 5:self.pushButton_5, 6:self.pushButton_6, 
            7: self.pushButton_7, 8:self.pushButton_8, 9:self.pushButton_9}

        self.pair = {
            (1,6,7),(1,7,6),(1,2,3),(1,3,2),(1,4,9),(1,9,4),
            (2,4,5),(2,5,4),(2,3,1),
            (3,8,9),(3,9,8),(3,4,7),(3,7,4),
            (6,4,8),(6,8,4),(6,7,1),
            (7,5,9),(7,9,5),(7,4,3),
            (5,4,2),
            (9,8,3),(9,5,7),(9,4,1),
            (8,4,6)
        }

    def retranslateUi(self, TicWindow):
        _translate = QtCore.QCoreApplication.translate
        TicWindow.setWindowTitle(_translate("TicWindow", "TicWindow"))
        self.pushButton_10.setText(_translate("TicWindow", "Retry?"))
        self.pushButton_11.setText(_translate("TicWindow", "Done"))
        self.label.setText(_translate("TicWindow", "Your Turn..."))
#######################################################################################################

#########################################MathGood###############################################
class Ui_MathWindow(object):

    def equa(self):
        self.x = int(uniform(1,15))
        self.y = int(uniform(1,4))
        self.z = int(uniform(1,15))
        self.equation.setText(str(self.x)+"  "+self.op(self.y)+"  "+str(self.z))

    def op(self,y):
        match y:
            case 1:
                y = '+'
            case 2:
                y = '-'
            case 3:
                y = '*'
            case 4:
                y = '/'

        return y  

    def submit_btn(self):

        match self.op(self.y):
            case '+':
                ans = self.x + self.z
            case '-':
                ans = self.x - self.z
            case '*':
                ans = self.x * self.z
            case '/':
                ans = self.x / self.z

        if str(ans) == self.answer.text():
            self.count=self.count+1
            self.incorrect.setText(str(self.count)+" Correct")
            self.attempts = 0
            self.equa()
        else:
            self.attempts = self.attempts+1
            match self.attempts:
                case 1:
                    self.incorrect.setText("Incorrect... try again"+str(self.attempts))
                case 2:
                    self.incorrect.setText("hmm... try again"+str(self.attempts))
                case 3:
                    self.incorrect.setText("Lets try something else"+str(self.attempts))
                    self.equa()
                    self.attempts = 0

    def quit_btn(self):
        QApplication.closeAllWindows()
        self.StartWindow = QMainWindow()
        self.ui = Ui_Start()
        self.ui.setupUi(self.StartWindow)
        self.StartWindow.show()

    def setupUi(self, MathWindow):
        MathWindow.setObjectName("MathWindow")
        MathWindow.resize(571, 419)
        self.centralwidget = QtWidgets.QWidget(MathWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")


        self.whatIs = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("MS Sans Serif")
        font.setPointSize(15)
        self.whatIs.setFont(font)
        self.whatIs.setAlignment(QtCore.Qt.AlignCenter)
        self.whatIs.setObjectName("whatIs")
        self.verticalLayout.addWidget(self.whatIs)


        self.equation = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("MS Sans Serif")
        font.setPointSize(15)
        self.equation.setFont(font)
        self.equation.setAlignment(QtCore.Qt.AlignCenter)
        self.equation.setObjectName("equation")
        self.verticalLayout.addWidget(self.equation)


        self.answer = QtWidgets.QLineEdit(self.centralwidget)
        self.answer.setAlignment(QtCore.Qt.AlignCenter)
        self.answer.setObjectName("answer")
        self.verticalLayout.addWidget(self.answer)


        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")

        self.submit = QtWidgets.QPushButton(self.centralwidget)
        self.submit.setEnabled(True)
        self.submit.setMaximumSize(QtCore.QSize(100, 50))
        self.submit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.submit.setObjectName("submit")
        self.horizontalLayout.addWidget(self.submit)
        self.submit.clicked.connect(self.submit_btn)

        self.quit = QtWidgets.QPushButton(self.centralwidget)
        self.quit.setEnabled(True)
        self.quit.setMaximumSize(QtCore.QSize(100, 50))
        self.quit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.quit.setObjectName("quit")
        self.horizontalLayout.addWidget(self.quit)
        self.quit.clicked.connect(self.quit_btn)

        self.verticalLayout.addLayout(self.horizontalLayout)


        self.incorrect = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("MS Reference Sans Serif")
        font.setPointSize(10)
        self.incorrect.setFont(font)
        self.incorrect.setAlignment(QtCore.Qt.AlignCenter)
        self.incorrect.setObjectName("incorrect")
        self.verticalLayout.addWidget(self.incorrect)


        MathWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MathWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 571, 21))
        self.menubar.setObjectName("menubar")
        MathWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MathWindow)
        self.statusbar.setObjectName("statusbar")
        MathWindow.setStatusBar(self.statusbar)

        self.count = 0
        self.attempts = 0
        self.x = int(uniform(1,15))
        self.y = int(uniform(1,4))
        self.z = int(uniform(1,15))

        self.retranslateUi(MathWindow)
        QtCore.QMetaObject.connectSlotsByName(MathWindow)

    def retranslateUi(self, MathWindow):
        _translate = QtCore.QCoreApplication.translate
        MathWindow.setWindowTitle(_translate("MathWindow", "MathWindow"))
        self.whatIs.setText(_translate("MathWindow", "What is..."))
        self.equation.setText(_translate("MathWindow", str(self.x)+"  "+self.op(self.y)+"  "+str(self.z)))
        self.submit.setText(_translate("MathWindow", "Submit"))
        self.quit.setText(_translate("MathWindow", "Quit"))
#######################################################################################################

###########################################Coming Soon#################################################
class Ui_CSWindow(object):
    def setupUi(self, CSWindow):
        CSWindow.setObjectName("CSWindow")
        CSWindow.resize(577, 420)
        self.centralwidget = QtWidgets.QWidget(CSWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        
        self.label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("MS PGothic")
        font.setPointSize(20)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)

        CSWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(CSWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 577, 21))
        self.menubar.setObjectName("menubar")
        CSWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(CSWindow)
        self.statusbar.setObjectName("statusbar")
        CSWindow.setStatusBar(self.statusbar)

        self.retranslateUi(CSWindow)
        QtCore.QMetaObject.connectSlotsByName(CSWindow)

    def retranslateUi(self, CSWindow):
        _translate = QtCore.QCoreApplication.translate
        CSWindow.setWindowTitle(_translate("CSWindow", "CSWindow"))
        self.label.setText(_translate("CSWindow", "Coming Soon!"))
#######################################################################################################


if __name__ == "__main__": #### Creates Scene ####
    import sys
    app = QApplication(sys.argv)
    ui = Ui_Start()
    win = QMainWindow()
    ui.setupUi(win)
    win.show()
    
    ###Guess
    GuessWindow = QMainWindow()
    LostWindow = QWidget()
    WinWindow = QWidget()

    ###Tic
    TicWindow = QMainWindow()

    ###Math
    MathWindow = QMainWindow()  

    sys.exit(app.exec())
